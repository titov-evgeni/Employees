version: '3.7'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: [ "/bin/sh", "entrypoint.sh" ]
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - "./employees_project:/usr/src/app/"
    ports:
      - 8000:8000
    env_file: .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:12.0-alpine
    volumes:
      - ".data/postgres:/var/lib/postgresql/data"
    env_file:
      - .env

  redis:
    image: redis:5-alpine
    restart: always

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery --app employees_project worker --loglevel=info
    volumes:
      - "./employees_project:/usr/src/app/"
    environment:
      - PYTHONUNBUFFERED=1
    env_file: .env
    depends_on:
      - db
      - redis
    restart: always

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery --app employees_project beat --loglevel=info
    volumes:
      - "./employees_project:/usr/src/app/"
    environment:
      - PYTHONUNBUFFERED=1
    env_file: .env
    depends_on:
      - db
      - redis
    restart: always

volumes:
  postgres_data:
